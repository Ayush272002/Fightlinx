// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  fighters  Fighter[] @relation("UserFighters")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Fighter {
  id            Int         @id @default(autoincrement())
  name          String
  age           Int
  heightCm      Float
  reachCm       Float
  gender        String
  weightKg      Float
  fightingStyle String // Brazilian Jiu-Jitsu, Karate, etc.
  gym           String // Fighter's training gym
  user          User        @relation("UserFighters", fields: [userId], references: [id])
  userId        Int
  fightStats    FightStat[] @relation("FighterFightStats")
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model FightStat {
  id                   Int      @id @default(autoincrement())
  fightId              Int
  event                String
  location             String
  fighter1Name         String
  fighter2Name         String
  fighter1Age          Int
  fighter2Age          Int
  fighter1HeightCm     Float
  fighter2HeightCm     Float
  fighter1ReachCm      Float
  fighter2ReachCm      Float
  fighter1Gender       String
  fighter2Gender       String
  fighter1WeightKg     Float
  fighter2WeightKg     Float
  fighter1Style        String
  fighter2Style        String
  fighter1Gym          String
  fighter2Gym          String
  rounds               Int
  roundEnd             Int
  timeEnd              String // For time formats like "05:00"
  outcome              String // 'Decision', 'KO', etc.
  winner               String // Name of winner
  method               String // 'Unanimous', 'Punch', etc.
  significantStrikesF1 Int
  significantStrikesF2 Int
  takedownsLandedF1    Int
  takedownsLandedF2    Int
  knockdownsF1         Int
  knockdownsF2         Int
  fighter              Fighter  @relation("FighterFightStats", fields: [fighterId], references: [id])
  fighterId            Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}
